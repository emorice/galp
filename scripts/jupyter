#!/bin/bash

# Starts a jupyter containerized server with the necessary python dependencies.
# The Jupyter project kindly provides images with classical stacks in it, see
# https://jupyter-docker-stacks.readthedocs.io/en/latest/index.html
# for reference.
# In particular, the jupyter/scipy-notebook matches our stack very well, and
# even includes dask. We mostly need to add our peculiar favorites, i.e plotly,
# tqdm, etc. (non-central packages of our linking)

# In order to avoid multiplying scripts with confusingly similar functions, this
# script serves both as the top-level script to start the container and the init
# script for said container.

start_container() {
	mkdir -p 'build/local'
	singularity instance start \
		-C -e \
		-B "${PWD}":/var/project:ro \
		-B 'build/local':/work:rw \
		docker://jupyter/scipy-notebook:399cbb986c6b \
		"jupyter_${CLONEID}"

	singularity exec \
		"instance://jupyter_${CLONEID}" \
		/var/project/scripts/jupyter \
			start_contained
}
	
python_venv() {
	python -m venv --system-site-packages /work/venv
	. /work/venv/bin/activate 
	pip install -r /var/project/requirements/slave.txt
	pip install ipykernel
	ipython kernel install --user --name venv --display-name 'Python 3 in virtual env'
}

start_jupyter() {
	export PYTHONPATH="${PYTHONPATH}:/var/project/src"
	python -m jupyter lab &
}

main() {
	while [ "$1" ]; do
		case "$1" in
		'start')
			start_container
			;;
		'stop')
			singularity instance stop "jupyter_$CLONEID"
			;;
		'status')
			singularity instance list "jupyter_$CLONEID"
			;;
		'start_contained')
			python_venv
			start_jupyter &
			;;
		esac
		shift
	done
}

main "$@"
