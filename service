#!/bin/bash
# Pipeline low-level management utility

SHARED_DIR='share'
VAR_DIR='var'
CLONE_FILE="$SHARED_DIR/clone.id"

load_clone_id() {
	if [ ! -d "$SHARED_DIR" ]; then
		mkdir "$SHARED_DIR"
	fi
	if [ ! -f "$CLONE_FILE" ]; then
		echo 'Fresh build, generating a unique clone id'
		export CLONEID=$(echo "$HOST:$PWD" | sha1sum | head -c 16)
		echo "$CLONEID" > "$CLONE_FILE"
	else
		export CLONEID=$(<"$CLONE_FILE")
		#echo "Reusing existing build with clone id $CLONEID"
	fi
}

ensure_dirs() {
	mkdir -p "$VAR_DIR/log"
}

main() {
	load_clone_id
	ensure_dirs
	SERVICES=""
	while [ "$1" ]; do
		case "$1" in
		'start')
			ACTION=start
			shift
			;;
		'status')
			ACTION=status
			shift
			;;
		'stop')
			ACTION=stop
			shift
			;;
		'run')
			ACTION=run
			shift
			;;
		'restart')
			ACTION=restart
			shift
			;;
		*)
			SERVICES="$SERVICES $1"
			shift
			;;
		esac
	done
	for service in $SERVICES; do
		if [ -f "scripts/$service" ]; then
			if [ "$ACTION" = 'restart' ]; then
				"scripts/${service}" 'stop'
				"scripts/${service}" 'start'
			else
				"scripts/${service}" $ACTION
			fi
		else
			echo "Service not found: ${service}"
		fi
		
	done
}

main "$@"
